name: Export Appian Package on File Update

on:
  push:
    paths:
      - '**/*.json'
      - '**/*.yml'

jobs:
  export-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Find and Extract Deployment Details from JSON/YAML
        id: extract
        run: |
          echo "üîç Searching for JSON/YAML files..."

          for FILE in $(find . -type f \( -name "*.json" -o -name "*.yml" \)); do
            echo "üìÑ Found file: $FILE"

            NAME=$(jq -r '.name // empty' "$FILE")
            DESCRIPTION=$(jq -r '.description // empty' "$FILE")
            UUID=$(jq -r '.uuids[0] // empty' "$FILE")

            if [[ -n "$NAME" && -n "$DESCRIPTION" && -n "$UUID" ]]; then
              echo "‚úÖ Valid deployment file found: $FILE"
              echo "üîπ Name: $NAME"
              echo "üîπ Description: $DESCRIPTION"
              echo "üîπ UUID: $UUID"

              echo "DEPLOY_NAME=$NAME" >> $GITHUB_ENV
              echo "DEPLOY_DESC=$DESCRIPTION" >> $GITHUB_ENV
              echo "DEPLOY_UUID=$UUID" >> $GITHUB_ENV
              break
            else
              echo "‚ö†Ô∏è $FILE is not a valid deployment definition. Skipping."
            fi
          done

      - name: Export Appian Package
        if: env.DEPLOY_NAME
        run: |
          echo "üì¶ Exporting package with name: $DEPLOY_NAME"
          curl --location --request POST 'https://mysite.appiancloud.com/suite/deployment-management/v2/deployments' \
          --header 'appian-api-key: ${{ secrets.APPIAN_API_KEY }}' \
          --header 'Action-Type: export' \
          --form json="{
            \"name\": \"${{ env.DEPLOY_NAME }}\",
            \"description\": \"${{ env.DEPLOY_DESC }}\",
            \"uuids\": [\"${{ env.DEPLOY_UUID }}\"],
            \"exportType\": \"package\"
          }"
